name: deploy and publish pipeline

on:
    release:
        types: [published]
        branches: [main]

env:
    DOCKER_IMAGE: {{cookiecutter.dockerhub_username}}/{{cookiecutter.project_slug}} # Replace with your DockerHub image
    AZURE_WEBAPP_NAME: {{cookiecutter.project_slug}}-app # Replace with your Azure Web App name

jobs:
    build-push-docker-image:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              env:
                  DOCKER_USER: {{cookiecutter.dockerhub_username}}
                  DOCKER_PWD: {% raw %}${{ secrets.DOCKERHUB_PUSH_TOKEN }}{% endraw %}
              run: echo $DOCKER_PWD | docker login -u $DOCKER_USER --password-stdin

            - name: Build and Push Docker Image
              run: {% raw %}make docker-build-and-push IMAGE=${{ env.DOCKER_IMAGE }} TAG=${{ github.sha }}{% endraw %}

            - name: Clean up Docker system
              run: docker system prune -f

    deploy:
        runs-on: ubuntu-latest
        needs: build-push-docker-image
        environment:
            name: "production"
            url: {% raw %}${{ steps.deploy-to-webapp.outputs.webapp-url }}{% endraw %}

        steps:
            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v2
              with:
                  app-name: {% raw %}"${{ env.AZURE_WEBAPP_NAME }}"{% endraw %}
                  slot-name: "production"
                  publish-profile: {% raw %}${{ secrets.AZURE_PUBLISH_PROFILE }}{% endraw %}
                  images: {% raw %}"index.docker.io/deepak93p/sample-ds-project:${{ github.sha }}"{% endraw %}

    publish-to-pypi:
        runs-on: ubuntu-latest
        steps:
            - name: Check out
              uses: actions/checkout@v4

            - name: Set up the environment
              uses: ./.github/actions/setup-poetry-env

            - name: Export tag
              id: vars
              run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

            - name: Build and publish
              run: |
                  source .venv/bin/activate
                  poetry version $RELEASE_VERSION
                  make build-and-publish
              env:
                  PYPI_TOKEN: {% raw %}${{ secrets.PYPI_TOKEN }}{% endraw %}
                  RELEASE_VERSION: {% raw %}${{ steps.vars.outputs.tag }}{% endraw %}
    deploy-docs:
        runs-on: ubuntu-latest
        steps:
            - name: Check out
              uses: actions/checkout@v4

            - name: Set up the environment
              uses: ./.github/actions/setup-poetry-env

            - name: Deploy documentation
              run: poetry run mkdocs gh-deploy --force

